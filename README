INTRODUCTION
-------------------------------------------------------------------------------
Isobar is a Python library for expressing and constructing musical patterns,
designed for use in algorithmic composition. It allows for concise construction,
manipulation and transposition of sequences, supporting scalar operations on
lazy patterns.

USAGE
-------------------------------------------------------------------------------

# import important bits
from isobar import *
from isobar.io.midiout import *

# create a pitch line comprised of multiple permutations on a pelog scale
ppitch = PShuffle([ 0, 1, 2, 3, 4 ], 1)
ppitch = PPermut(ppitch)
ppitch = PDegree(ppitch, Key("F#", "pelog"))

# create a permuted set of durations
pdur = PShuffle([ 1, 1, 2, 2, 4 ], 1)
pdur  = PPermut(pdur) * 0.25

# schedule on a 60bpm timeline and send to MIDI output
timeline = Timeline(60, MidiOut())
timeline.sched({ 'note': ppitch + 60, 'dur': pdur, 'channel': 0 })
timeline.sched({ 'note': ppitch + 24, 'dur': pdur * 4, 'channel': 1 })
timeline.run()

EXAMPLES
-------------------------------------------------------------------------------
More examples are available in the 'examples' directory with this
distribution.

CLASSES
-------------------------------------------------------------------------------

Current class list:

	Chord
	Key
	Note
	Scale
	Timeline
	Clock

Pattern classes:

    (pattern/core.py)
	Pattern        - generic pattern superclass
	PAbs           - absolute value of an input pattern
	PAdd           - add two patterns together (shorthand: patternA + patternB)
	PSub           - subtract pattern B from A (shorthand: patternA - patternB)
	PMul           - divide pattern A by B (shorthand: patternA / patternB)
	PDiv           - multiply pattern A by B (shorthand: patternA * patternB)

    (pattern/sequence.py)
	PConst         - constant value
	PSeq           - sequence of fixed values (repeated N times)
	PSeries        - geometric series
	PLoop          - repeat an input pattern N times
	PCreep         - creep through an input pattern by N notes each step
	PStutter       - repeat each input value N times
	PWrap          - wrap values around a given range
	PPermut        - all permutations of a finite input pattern
	PDegree        - map values to a given Scale

    (pattern/chance.py)
	PWhite         - white noise (uncorrelated values within a given range)
	PBrown         - brownian noise
	PIBrown        - brownian noise (integer values only)
	PChoice        - random choice from a list
	PWChoice       - weighted random choice from a list
	PShuffle       - shuffle a finite input sequence

	PDelay
	PDiff
	PLSys
	PMarkov
	PSelfIndex
	PSkip
	PWRamp
	PWSine
	PWrap

	PWarp
	PWalk
	PAutomate      - superclass for continuous value automation (in development)

BACKGROUND
-------------------------------------------------------------------------------
Isobar was first designed for the generative sound installation Variable 4:

	http://www.variable4.org.uk/news/

